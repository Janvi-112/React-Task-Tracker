[{"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\index.js":"1","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\App.js":"2","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\reportWebVitals.js":"3","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Header.js":"4","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Tasks.js":"5","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Task.js":"6","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Elements\\Button.js":"7","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\AddTask.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2601,"mtime":1611828189567,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":675,"mtime":1611770581523,"results":"13","hashOfConfig":"10"},{"size":401,"mtime":1611825135497,"results":"14","hashOfConfig":"10"},{"size":535,"mtime":1611824943260,"results":"15","hashOfConfig":"10"},{"size":444,"mtime":1611398016158,"results":"16","hashOfConfig":"10"},{"size":2090,"mtime":1611753352760,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"10govm6",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\index.js",[],["36","37"],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\App.js",["38"],"import { useState, useEffect } from 'react'\n\nimport Header from './Components/Header';\nimport Tasks from './Components/Tasks';\nimport AddTasks from './Components/AddTask';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([ ])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, [])\n\n\n  // Fetch all tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:8000/tasks');\n    const data = await res.json();\n    return data;\n  }\n\n\n  // Fetch one task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }\n\n\n\n  // Add taks\n  const addTask = async (task) => {\n    const res = await fetch(`http://localhost:8000/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = {id, ...task};\n    // setTasks([...tasks, newTask])\n  }\n\n\n  // Delete Task ----> PROP DRILLING\n  const delTask = async (id) => {\n    await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n\n    setTasks(tasks.filter((curTask) => {\n      if(curTask.id !== id)\n        return curTask;\n    }))\n  };\n\n\n  // Toggle Reminder ----> PROP DRILLING\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id);\n\n    const updatedTask = {\n      ...taskToToggle, \n      reminder: !taskToToggle.reminder\n    }\n\n    const res = await fetch(`http://localhost:8000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n\n    setTasks(tasks.map((task) => \n      task.id === id ? \n      {...task, reminder: data.reminder} : task\n    ))\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <Header \n        title=\"Task Tracker\" \n        onAdd={() => setShowAddTask(!showAddTask)} \n        showAdd={showAddTask}\n      />\n      <AddTasks onAdd={addTask} showAddTask={showAddTask} />\n      {\n        tasks.length > 0 ? \n          <Tasks \n            tasks={tasks} \n            onDelete={delTask} \n            onToggle={toggleReminder}\n          /> : 'No Task to display'\n      }\n      \n    </div>\n  );\n}\n\nexport default App;","E:\\Courses\\React Crash Course\\react-task-tracker\\src\\reportWebVitals.js",[],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Header.js",[],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Tasks.js",[],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Task.js",[],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\Elements\\Button.js",[],"E:\\Courses\\React Crash Course\\react-task-tracker\\src\\Components\\AddTask.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":64,"column":37,"nodeType":"45","messageId":"46","endLine":64,"endColumn":39},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]